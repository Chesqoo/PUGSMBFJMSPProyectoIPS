<#@ template
inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".java" #>
<#@ PUGSMBFJMSPProyectoIPS processor="PUGSMBFJMSPProyectoIPSDirectiveProcessor" 
requires="fileName='Sample.PUGSMBFJMSP_DSLProyIPS'" #>

<#  //METODO PRINCIPAL
imports();
procesarMain(this.TapizGUI.VentanaPrincipal);
procesarVentana(this.TapizGUI.VentanaPrincipal);

foreach(Ventana va in this.TapizGUI.VentanaSecundaria)
{
 procesarVentana(va);
}
#>

<#+ //METODO PROCESAR MAIN
private void procesarMain(VentanaPrincipal v){
WriteLine("public class App_GUI"+this.TapizGUI.solucionGUIs+"{");
WriteLine("public static void main (String[] args){");
WriteLine("new Frame_"+v.nombre+"();");
WriteLine("}\n}");
}
#>

<#+ //METODO IMPORTS
 private void imports(){
 WriteLine("import java.awt.*;");
 WriteLine("import java.awt.event.*; \n");
 }
#>



<#+ //METODO PROCESAR VENTANAS
 private void procesarVentana(Ventana v){

//si la ventana es Vprincipal, nombre Frame_v.nombre, si no Dialogv

if(v is VentanaPrincipal){
WriteLine("public class Frame_"+v.nombre+" extends Frame impements ActionListener{ \n");
}else{
WriteLine("public class Dialog_"+v.nombre+" extends Dialog impements ActionListener{ \n");
}

//TODO: desarrollar atributos tipo Ventana
atributosVentana(v); 
//TODO: desarrollar atributos tipo boton o item de menu
atributosClickable(v); Write("\n");
//TODO: esqueleto funcion procesarConstructor
generarConstructor(v); Write("\n");
//TODO: esqueleto funcion procesaractionPerformed
generarActionPerformed(v);

WriteLine("}\n"); //Fin de la clase
}
#>


<#+ //METODO GENERAR CONSTRUCTOR
private void generarConstructor(Ventana v){

	if(v is VentanaPrincipal) {
		WriteLine("\tpublic Frame_"+v.nombre+"() {");
		WriteLine("\t\tsuper();");
		WriteLine("\t\tthis.setTitle(\"Frame_"+v.nombre+"\");");

		//Declara las ventanas dependientes de esta
		foreach(Boton b in v.Boton) {
			if(b.VentanaTarget != null)
				WriteLine("\t\tventana_"+b.VentanaTarget.nombre+" = new Dialog_"+b.VentanaTarget.nombre+"(this,true);");
		}
		foreach(Menu m in v.Menu) {
			foreach(ItemDeMenu im in m.ItemDeMenu)
				if (im.VentanaTarget != null)
					WriteLine("\t\tventana_"+im.VentanaTarget.nombre+" = new Dialog_"+im.VentanaTarget.nombre+"(this,true);");
		}

		WriteLine("\t\tthis.setLayout(new FlowLayout());\n");

		//Creacion Menus
		if(v.Menu.Count>0) {
			WriteLine("\t\tMenuBar MB = new MenuBar();");
			WriteLine("\t\tthis.setMenuBar(MB)");
			foreach(Menu m in v.Menu) {
				WriteLine("\t\tMenu menu"+m.titulo+" = new Menu(\"m.titulo\");");
				foreach(ItemDeMenu im in m.ItemDeMenu) {
					WriteLine("\t\titem"+im.titulo+" = new MenuItem(\"im.titulo\");");
					WriteLine("\t\tmenu"+m.titulo+".add(item"+im.titulo+");");
				}
				WriteLine("\t\tMB.add(menu"+m.titulo+");");
			}
		}
		
		foreach(Boton b in v.Boton) {
			WriteLine("\t\tboton"+b.titulo+" = new Button(\""+b.titulo+"\");");
			WriteLine("\t\tthis.add(boton"+b.titulo+");");
			WriteLine("\t\tboton"+b.titulo+".addActionListener(this);");
		}

		//Formato pagina
		WriteLine("\n\t\tthis.setSize(500,300);");
		WriteLine("\t\tthis.setVisible(true);");
		WriteLine("\t}\n");

	} else {
		//Determina quien es la ventana padre
		Ventana owner = null;
		foreach(Boton b in v.Boton) {
			if (b.isBack)
				owner = b.VentanaTarget;
		}
		if(owner is VentanaPrincipal) {
			WriteLine("public Dialog_"+v.nombre+"(Frame owner, boolean modal) {");
		} else {
			WriteLine("public Dialog_"+v.nombre+"(Dialog owner, boolean modal) {");
		}

		WriteLine("\t super(owner, \"Dialog_"+v.nombre+"\", modal);");

		//Declara las ventanas dependientes de esta
		foreach(Boton b in v.Boton) {
			if(b.VentanaTarget != null && !(b.VentanaTarget == owner))
				WriteLine("\t ventanav_"+b.VentanaTarget.nombre+" = new Dialog_"+b.VentanaTarget.nombre+"(this,true);");
		}
		foreach(Menu m in v.Menu) {
			foreach(ItemDeMenu im in m.ItemDeMenu)
				if (im.VentanaTarget != null && !(im.VentanaTarget == owner))
					WriteLine("\t ventanav_"+im.VentanaTarget.nombre+" = new Dialog_"+im.VentanaTarget.nombre+"(this,true);");
		}

		WriteLine("\t this.setLayout(new FlowLayout());\n");

		//Creacion items de menu (como botones por restriccion del enunciado)
		foreach(Menu m in v.Menu) {
			foreach(ItemDeMenu im in m.ItemDeMenu) {
				WriteLine("\t item"+im.titulo+" = new Button(\"im.titulo\");");
				WriteLine("\t this.add(item"+im.titulo+");");
				WriteLine("\t item"+im.titulo+".addActionListener(this);");
			}
		}

		//Instanciacion botones
		foreach(Boton b in v.Boton) {
			WriteLine("\t boton"+b.titulo+" = new Button(\""+b.titulo+"\");");
			WriteLine("\t this.add(boton"+b.titulo+");");
			WriteLine("\t boton"+b.titulo+".addActionListener(this);");
		}
		
		WriteLine("\n\t this.setSize(250,150)");
		WriteLine("}\n");
	}

}
#>

<#+ //METODO GENERAR ACTION PERFORMED
private void generarActionPerformed(Ventana v){
WriteLine("public void actionPerformed (ActionEvent ae) {");
WriteLine("\t Object o = ae.getSource();");

foreach(Boton b in v.Boton){
	WriteLine("\t\t if(o == " + b.titulo + "){");
	if( b.isBack )
	WriteLine("\t\t\t this.setVisible(false);");
	else if ( b.VentanaTarget != null )
	WriteLine("\t\t\t ventana_" + b.VentanaTarget.nombre + ".setVisible(true);");
	else if (b.EstadoFin != null)
	WriteLine("System.exit(0);");
}

WriteLine("}");
}
#>

<#+ //METODO ATR. VENTANAS
private void atributosVentana(Ventana v){

foreach(Boton bot in v.Boton){//Botones

	//Obtener la ventana a la que lleva el boton
	if(bot.VentanaTarget!=null){
		if(bot.VentanaTarget is VentanaSecundaria){
			WriteLine("\tprivate Dialog_"+bot.VentanaTarget.nombre+" ventana_"+bot.VentanaTarget.nombre+";");
			}
	}//ifBot
}//foreachBot

foreach(Menu m in v.Menu){
	foreach(ItemDeMenu it in m.ItemDeMenu){
		if(it.VentanaTarget!=null){
			if(it.VentanaTarget is VentanaSecundaria){
			WriteLine("\tprivate Dialog_"+it.VentanaTarget.nombre+" ventana_"+it.VentanaTarget.nombre+";");
			}
		}
	}
}

}
#>




<#+ //METODO CLICKABLES
private void atributosClickable(Ventana v){
foreach(Boton bot in v.Boton)
{
 WriteLine("\tprivate Button boton"+bot.titulo+";");
}
foreach(Menu m in v.Menu){
	foreach(ItemDeMenu it in m.ItemDeMenu){
	WriteLine("\tprivate MenuItem item"+it.titulo+";");
	}
}
}
#>