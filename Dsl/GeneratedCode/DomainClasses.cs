//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.PUGSMBFJMSPProyectoIPS
{
	/// <summary>
	/// DomainClass TapizGUIs
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIs.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIs.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("a09bf113-d90d-4cde-8cc8-9526f4784123")]
	public partial class TapizGUIs : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// TapizGUIs domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa09bf113, 0xd90d, 0x4cde, 0x8c, 0xc8, 0x95, 0x26, 0xf4, 0x78, 0x41, 0x23);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizGUIs(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public TapizGUIs(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region solucionGUIs domain property code
		
		/// <summary>
		/// solucionGUIs domain property Id.
		/// </summary>
		public static readonly global::System.Guid solucionGUIsDomainPropertyId = new global::System.Guid(0x1bd814c5, 0x2747, 0x4def, 0xb0, 0xd4, 0xac, 0xf3, 0x98, 0x9b, 0xfb, 0x57);
		
		/// <summary>
		/// Storage for solucionGUIs
		/// </summary>
		private global::System.String solucionGUIsPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of solucionGUIs domain property.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIs.Solucion GUIs
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIs/solucionGUIs.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIs/solucionGUIs.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1bd814c5-2747-4def-b0d4-acf3989bfb57")]
		public global::System.String solucionGUIs
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return solucionGUIsPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				solucionGUIsPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the TapizGUIs.solucionGUIs domain property.
		/// </summary>
		internal sealed partial class solucionGUIsPropertyHandler : DslModeling::DomainPropertyValueHandler<TapizGUIs, global::System.String>
		{
			private solucionGUIsPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the TapizGUIs.solucionGUIs domain property value handler.
			/// </summary>
			public static readonly solucionGUIsPropertyHandler Instance = new solucionGUIsPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the TapizGUIs.solucionGUIs domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return solucionGUIsDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(TapizGUIs element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.solucionGUIsPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(TapizGUIs element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.solucionGUIsPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Ventana opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Ventana.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasVentana.TapizGUIs
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Ventana> Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasVentana.TapizGUIsDomainRoleId);
			}
		}
		#endregion
		#region EstadoFin opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EstadoFin.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasEstadoFin.TapizGUIs
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EstadoFin> EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoFin>, EstadoFin>(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasEstadoFin.TapizGUIsDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.EstadoFin.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana sourceVentana1 = sourceElement as global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana;
			if (sourceVentana1 != null)
			{
				// Create link for path TapizGUIsHasVentana.Ventana
				this.Ventana.Add(sourceVentana1);

				return;
			}
				
			global::UPM_IPS.PUGSMBFJMSPProyectoIPS.EstadoFin sourceEstadoFin2 = sourceElement as global::UPM_IPS.PUGSMBFJMSPProyectoIPS.EstadoFin;
			if (sourceEstadoFin2 != null)
			{
				// Create link for path TapizGUIsHasEstadoFin.EstadoFin
				this.EstadoFin.Add(sourceEstadoFin2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana sourceVentana1 = sourceElement as global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana;
			if (sourceVentana1 != null)
			{
				// Delete link for path TapizGUIsHasVentana.Ventana
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasVentana.GetLinks((global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIs)this, sourceVentana1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasVentana.TapizGUIsDomainRoleId, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasVentana.VentanaDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.PUGSMBFJMSPProyectoIPS.EstadoFin sourceEstadoFin2 = sourceElement as global::UPM_IPS.PUGSMBFJMSPProyectoIPS.EstadoFin;
			if (sourceEstadoFin2 != null)
			{
				// Delete link for path TapizGUIsHasEstadoFin.EstadoFin
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasEstadoFin.GetLinks((global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIs)this, sourceEstadoFin2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasEstadoFin.TapizGUIsDomainRoleId, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasEstadoFin.EstadoFinDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.PUGSMBFJMSPProyectoIPS
{
	/// <summary>
	/// DomainClass Ventana
	/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("7fc839cd-5309-48d1-9a17-1a51437c88cb")]
	public abstract partial class Ventana : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Ventana domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7fc839cd, 0x5309, 0x48d1, 0x9a, 0x17, 0x1a, 0x51, 0x43, 0x7c, 0x88, 0xcb);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Ventana(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region nombre domain property code
		
		/// <summary>
		/// nombre domain property Id.
		/// </summary>
		public static readonly global::System.Guid nombreDomainPropertyId = new global::System.Guid(0xd76bdded, 0x3c28, 0x4363, 0xb3, 0xc8, 0x6a, 0x43, 0xcf, 0x10, 0x32, 0x14);
		
		/// <summary>
		/// Storage for nombre
		/// </summary>
		private global::System.String nombrePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of nombre domain property.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana.Nombre
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana/nombre.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana/nombre.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("d76bdded-3c28-4363-b3c8-6a43cf103214")]
		public global::System.String nombre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return nombrePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				nombrePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.nombre domain property.
		/// </summary>
		internal sealed partial class nombrePropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.String>
		{
			private nombrePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.nombre domain property value handler.
			/// </summary>
			public static readonly nombrePropertyHandler Instance = new nombrePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.nombre domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return nombreDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.nombrePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.nombrePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region ancho domain property code
		
		/// <summary>
		/// ancho domain property Id.
		/// </summary>
		public static readonly global::System.Guid anchoDomainPropertyId = new global::System.Guid(0x76c31192, 0xf807, 0x44a7, 0xa0, 0xae, 0xba, 0xca, 0x4a, 0xc5, 0xf1, 0x32);
		
		/// <summary>
		/// Storage for ancho
		/// </summary>
		private global::System.Int16 anchoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of ancho domain property.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana.Ancho
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana/ancho.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana/ancho.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("76c31192-f807-44a7-a0ae-baca4ac5f132")]
		public global::System.Int16 ancho
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return anchoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				anchoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.ancho domain property.
		/// </summary>
		internal sealed partial class anchoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int16>
		{
			private anchoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.ancho domain property value handler.
			/// </summary>
			public static readonly anchoPropertyHandler Instance = new anchoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.ancho domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return anchoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.anchoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.anchoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region alto domain property code
		
		/// <summary>
		/// alto domain property Id.
		/// </summary>
		public static readonly global::System.Guid altoDomainPropertyId = new global::System.Guid(0x6d0e179c, 0xe1c0, 0x453b, 0xb0, 0xa6, 0x86, 0xa0, 0xd3, 0x43, 0xd0, 0xe1);
		
		/// <summary>
		/// Storage for alto
		/// </summary>
		private global::System.Int16 altoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of alto domain property.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana.Alto
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana/alto.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana/alto.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("6d0e179c-e1c0-453b-b0a6-86a0d343d0e1")]
		public global::System.Int16 alto
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return altoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				altoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Ventana.alto domain property.
		/// </summary>
		internal sealed partial class altoPropertyHandler : DslModeling::DomainPropertyValueHandler<Ventana, global::System.Int16>
		{
			private altoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Ventana.alto domain property value handler.
			/// </summary>
			public static readonly altoPropertyHandler Instance = new altoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Ventana.alto domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return altoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Int16 GetValue(Ventana element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.altoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Ventana element, global::System.Int16 newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Int16 oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.altoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region TapizGUIs opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizGUIs.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasVentana.Ventana
		/// </summary>
		public virtual TapizGUIs TapizGUIs
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasVentana.VentanaDomainRoleId) as TapizGUIs;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasVentana.VentanaDomainRoleId, value);
			}
		}
		#endregion
		#region Menu opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Menu.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasMenu.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Menu> Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasMenu.VentanaDomainRoleId);
			}
		}
		#endregion
		#region Boton opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Boton.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasBoton.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasBoton.VentanaDomainRoleId);
			}
		}
		#endregion
		#region BotonSource opposite domain role accessor
		
		/// <summary>
		/// Gets a list of BotonSource.
		/// Description for
		/// UPM_IPS.PUGSMBFJMSPProyectoIPS.BotonReferencesVentanaTarget.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Boton> BotonSource
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.BotonReferencesVentanaTarget.VentanaDomainRoleId);
			}
		}
		#endregion
		#region EstadoFin opposite domain role accessor
		
		/// <summary>
		/// Gets a list of EstadoFin.
		/// Description for
		/// UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaReferencesEstadoFin.Ventana
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<EstadoFin> EstadoFin
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<EstadoFin>, EstadoFin>(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaReferencesEstadoFin.VentanaDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu sourceMenu1 = sourceElement as global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu;
			if (sourceMenu1 != null)
			{
				// Create link for path VentanaHasMenu.Menu
				this.Menu.Add(sourceMenu1);

				return;
			}
				
			global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton sourceBoton2 = sourceElement as global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton;
			if (sourceBoton2 != null)
			{
				// Create link for path VentanaHasBoton.Boton
				this.Boton.Add(sourceBoton2);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu sourceMenu1 = sourceElement as global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu;
			if (sourceMenu1 != null)
			{
				// Delete link for path VentanaHasMenu.Menu
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasMenu.GetLinks((global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana)this, sourceMenu1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasMenu.VentanaDomainRoleId, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasMenu.MenuDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton sourceBoton2 = sourceElement as global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton;
			if (sourceBoton2 != null)
			{
				// Delete link for path VentanaHasBoton.Boton
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasBoton.GetLinks((global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Ventana)this, sourceBoton2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasBoton.VentanaDomainRoleId, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasBoton.BotonDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.PUGSMBFJMSPProyectoIPS
{
	/// <summary>
	/// DomainClass VentanaPrincipal
	/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaPrincipal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaPrincipal.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaPrincipal.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("da1a9b8e-2cee-45e6-9a44-f987cfdb9479")]
	public partial class VentanaPrincipal : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaPrincipal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xda1a9b8e, 0x2cee, 0x45e6, 0x9a, 0x44, 0xf9, 0x87, 0xcf, 0xdb, 0x94, 0x79);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaPrincipal(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
	}
}
namespace UPM_IPS.PUGSMBFJMSPProyectoIPS
{
	/// <summary>
	/// DomainClass VentanaSecundaria
	/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaSecundaria
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaSecundaria.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaSecundaria.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("16beb939-a3f4-49ef-9b05-66757f1acfdb")]
	public partial class VentanaSecundaria : Ventana
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// VentanaSecundaria domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x16beb939, 0xa3f4, 0x49ef, 0x9b, 0x05, 0x66, 0x75, 0x7f, 0x1a, 0xcf, 0xdb);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public VentanaSecundaria(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region esModal domain property code
		
		/// <summary>
		/// esModal domain property Id.
		/// </summary>
		public static readonly global::System.Guid esModalDomainPropertyId = new global::System.Guid(0xdded60a8, 0x3684, 0x4d66, 0x8b, 0x6d, 0xe2, 0x3d, 0xdf, 0xce, 0xdb, 0xd2);
		
		/// <summary>
		/// Storage for esModal
		/// </summary>
		private global::System.Boolean esModalPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of esModal domain property.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaSecundaria.Es Modal
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaSecundaria/esModal.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaSecundaria/esModal.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("dded60a8-3684-4d66-8b6d-e23ddfcedbd2")]
		public global::System.Boolean esModal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return esModalPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				esModalPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the VentanaSecundaria.esModal domain property.
		/// </summary>
		internal sealed partial class esModalPropertyHandler : DslModeling::DomainPropertyValueHandler<VentanaSecundaria, global::System.Boolean>
		{
			private esModalPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the VentanaSecundaria.esModal domain property value handler.
			/// </summary>
			public static readonly esModalPropertyHandler Instance = new esModalPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the VentanaSecundaria.esModal domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return esModalDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(VentanaSecundaria element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.esModalPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(VentanaSecundaria element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.esModalPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace UPM_IPS.PUGSMBFJMSPProyectoIPS
{
	/// <summary>
	/// DomainClass Menu
	/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("736d42c0-8e1b-421f-80b6-d39250f15dbb")]
	public partial class Menu : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Menu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x736d42c0, 0x8e1b, 0x421f, 0x80, 0xb6, 0xd3, 0x92, 0x50, 0xf1, 0x5d, 0xbb);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Menu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region titulo domain property code
		
		/// <summary>
		/// titulo domain property Id.
		/// </summary>
		public static readonly global::System.Guid tituloDomainPropertyId = new global::System.Guid(0x478d81b8, 0x86e8, 0x4ced, 0x9c, 0x23, 0x67, 0x1f, 0x79, 0xad, 0xc3, 0xba);
		
		/// <summary>
		/// Storage for titulo
		/// </summary>
		private global::System.String tituloPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of titulo domain property.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu.Titulo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu/titulo.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu/titulo.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("478d81b8-86e8-4ced-9c23-671f79adc3ba")]
		public global::System.String titulo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tituloPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tituloPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Menu.titulo domain property.
		/// </summary>
		internal sealed partial class tituloPropertyHandler : DslModeling::DomainPropertyValueHandler<Menu, global::System.String>
		{
			private tituloPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Menu.titulo domain property value handler.
			/// </summary>
			public static readonly tituloPropertyHandler Instance = new tituloPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Menu.titulo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tituloDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Menu element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tituloPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Menu element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tituloPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Ventana opposite domain role accessor
		/// <summary>
		/// Gets or sets Ventana.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasMenu.Menu
		/// </summary>
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasMenu.MenuDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasMenu.MenuDomainRoleId, value);
			}
		}
		#endregion
		#region ItemDeMenu opposite domain role accessor
		/// <summary>
		/// Gets or sets ItemDeMenu.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.MenuHasItemDeMenu.Menu
		/// </summary>
		public virtual ItemDeMenu ItemDeMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.MenuHasItemDeMenu.MenuDomainRoleId) as ItemDeMenu;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.MenuHasItemDeMenu.MenuDomainRoleId, value);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.ItemDeMenu.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: MenuHasItemDeMenu.ItemDeMenu
					if (this.ItemDeMenu != null)
					{
						return false;
					}
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.PUGSMBFJMSPProyectoIPS.ItemDeMenu sourceItemDeMenu1 = sourceElement as global::UPM_IPS.PUGSMBFJMSPProyectoIPS.ItemDeMenu;
			if (sourceItemDeMenu1 != null)
			{
				// Create link for path MenuHasItemDeMenu.ItemDeMenu
				this.ItemDeMenu = sourceItemDeMenu1;

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.PUGSMBFJMSPProyectoIPS.ItemDeMenu sourceItemDeMenu1 = sourceElement as global::UPM_IPS.PUGSMBFJMSPProyectoIPS.ItemDeMenu;
			if (sourceItemDeMenu1 != null)
			{
				// Delete link for path MenuHasItemDeMenu.ItemDeMenu
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.PUGSMBFJMSPProyectoIPS.MenuHasItemDeMenu.GetLinks((global::UPM_IPS.PUGSMBFJMSPProyectoIPS.Menu)this, sourceItemDeMenu1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.MenuHasItemDeMenu.MenuDomainRoleId, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.MenuHasItemDeMenu.ItemDeMenuDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.PUGSMBFJMSPProyectoIPS
{
	/// <summary>
	/// DomainClass ItemDeMenu
	/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.ItemDeMenu
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.ItemDeMenu.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.ItemDeMenu.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("c4391778-13fb-43cf-b6d9-dc7d5343cd51")]
	public partial class ItemDeMenu : Boton
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ItemDeMenu domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xc4391778, 0x13fb, 0x43cf, 0xb6, 0xd9, 0xdc, 0x7d, 0x53, 0x43, 0xcd, 0x51);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemDeMenu(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ItemDeMenu(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region MenuPadre opposite domain role accessor
		/// <summary>
		/// Gets or sets MenuPadre.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.MenuHasItemDeMenu.ItemDeMenu
		/// </summary>
		public virtual Menu MenuPadre
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.MenuHasItemDeMenu.ItemDeMenuDomainRoleId) as Menu;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.MenuHasItemDeMenu.ItemDeMenuDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.PUGSMBFJMSPProyectoIPS
{
	/// <summary>
	/// DomainClass Boton
	/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("2aefa29b-6b75-42b2-a9a8-20d3680f4d57")]
	public partial class Boton : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Boton domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x2aefa29b, 0x6b75, 0x42b2, 0xa9, 0xa8, 0x20, 0xd3, 0x68, 0x0f, 0x4d, 0x57);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Boton(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region titulo domain property code
		
		/// <summary>
		/// titulo domain property Id.
		/// </summary>
		public static readonly global::System.Guid tituloDomainPropertyId = new global::System.Guid(0x1a752cea, 0xe3c9, 0x4372, 0x85, 0xa5, 0x6b, 0xe9, 0xc1, 0x72, 0xb4, 0x51);
		
		/// <summary>
		/// Storage for titulo
		/// </summary>
		private global::System.String tituloPropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of titulo domain property.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton.Titulo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton/titulo.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.Boton/titulo.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1a752cea-e3c9-4372-85a5-6be9c172b451")]
		public global::System.String titulo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tituloPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				tituloPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Boton.titulo domain property.
		/// </summary>
		internal sealed partial class tituloPropertyHandler : DslModeling::DomainPropertyValueHandler<Boton, global::System.String>
		{
			private tituloPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Boton.titulo domain property value handler.
			/// </summary>
			public static readonly tituloPropertyHandler Instance = new tituloPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Boton.titulo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return tituloDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Boton element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tituloPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Boton element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tituloPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Ventana opposite domain role accessor
		/// <summary>
		/// Gets or sets Ventana.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasBoton.Boton
		/// </summary>
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasBoton.BotonDomainRoleId) as Ventana;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaHasBoton.BotonDomainRoleId, value);
			}
		}
		#endregion
		#region VentanaTarget opposite domain role accessor
		
		/// <summary>
		/// Gets a list of VentanaTarget.
		/// Description for
		/// UPM_IPS.PUGSMBFJMSPProyectoIPS.BotonReferencesVentanaTarget.Boton
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Ventana> VentanaTarget
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.BotonReferencesVentanaTarget.BotonDomainRoleId);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.PUGSMBFJMSPProyectoIPS
{
	/// <summary>
	/// DomainClass EstadoFin
	/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.EstadoFin
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.EstadoFin.DisplayName", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.PUGSMBFJMSPProyectoIPS.EstadoFin.Description", typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel), "UPM_IPS.PUGSMBFJMSPProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.PUGSMBFJMSPProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("d9a87412-2844-4df2-a3a6-746210476a98")]
	public partial class EstadoFin : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// EstadoFin domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd9a87412, 0x2844, 0x4df2, 0xa3, 0xa6, 0x74, 0x62, 0x10, 0x47, 0x6a, 0x98);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoFin(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public EstadoFin(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region TapizGUIs opposite domain role accessor
		/// <summary>
		/// Gets or sets TapizGUIs.
		/// Description for UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasEstadoFin.EstadoFin
		/// </summary>
		public virtual TapizGUIs TapizGUIs
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasEstadoFin.EstadoFinDomainRoleId) as TapizGUIs;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.PUGSMBFJMSPProyectoIPS.TapizGUIsHasEstadoFin.EstadoFinDomainRoleId, value);
			}
		}
		#endregion
		#region Ventana opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Ventana.
		/// Description for
		/// UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaReferencesEstadoFin.EstadoFin
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Ventana> Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Ventana>, Ventana>(global::UPM_IPS.PUGSMBFJMSPProyectoIPS.VentanaReferencesEstadoFin.EstadoFinDomainRoleId);
			}
		}
		#endregion
	}
}
