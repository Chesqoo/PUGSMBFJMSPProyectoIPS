<#@ template
inherits="Microsoft.VisualStudio.TextTemplating.VSHost.ModelingTextTransformation" #>
<#@ output extension=".java" #>
<#@ PUGSMBFJMSPProyectoIPS processor="PUGSMBFJMSPProyectoIPSDirectiveProcessor" 
requires="fileName='Test.PUGSMBFJMSP_DSLProyIPS'" #>

<#  //METODO PRINCIPAL
imports();
procesarMain(this.TapizGUI.VentanaPrincipal);
procesarVentana(this.TapizGUI.VentanaPrincipal);

foreach(Ventana va in this.TapizGUI.VentanaSecundaria)
{
 procesarVentana(va);
}
#>

<#+ //METODO PROCESAR MAIN
private void procesarMain(VentanaPrincipal v){
WriteLine("public class App_GUI"+this.TapizGUI.solucionGUIs+"{");
WriteLine("public static void main (String[] args){");
WriteLine("new Frame_"+v.nombre+"();");
WriteLine("}\n}");
}
#>

<#+ //METODO IMPORTS
 private void imports(){
 WriteLine("import java.awt.*;");
 WriteLine("import java.awt.event.*; \n");
 }
#>



<#+ //METODO PROCESAR VENTANAS
 private void procesarVentana(Ventana v){

//si la ventana es Vprincipal, nombre Frame_v.nombre, si no Dialogv

if(v is VentanaPrincipal){
WriteLine("public class Frame_"+v.nombre+" extends Frame impements ActionListener{ \n");
}else{
WriteLine("public class Dialog_"+v.nombre+" extends Dialog impements ActionListener{ \n");
}

//TODO: desarrollar atributos tipo Ventana
atributosVentana(v); 
//TODO: desarrollar atributos tipo boton o item de menu
atributosClickable(v); Write("\n");
//TODO: esqueleto funcion procesarConstructor
generarConstructor(v); Write("\n");
//TODO: esqueleto funcion procesaractionPerformed
generarActionPerformed(v);

WriteLine("}\n"); //Fin de la clase
}
#>


<#+
private void generarConstructor(Ventana v){
	if(v is VentanaPrincipal) {
		WriteLine("public Frame_"+v.nombre+"() {");
		WriteLine("\t super();");
		WriteLine("\t this.setTitle(\"Frame_"+v.nombre+"\");");

		WriteLine("\t ventanav_Peliculas = new Dialog_Peliculas(this,true);");
		WriteLine("\t ventanav_Cines = new Dialog_Cines(this,true);");

		WriteLine("\t this.setLayout(new FlowLayout());");
		
		//Instanciacion botones
		WriteLine("\n\t botonPeliculas = new Button(\"Cartelera\");");
		WriteLine("\t this.add(botonPeliculas);");
		WriteLine("\t botonCines = new Button(\"Nuestros Cines\");");
		WriteLine("\t this.add(botonCines);");
		WriteLine("\t botonSalir = new Button(\"Salir\");");
		WriteLine("\t this.add(botonSalir);");

		//Action Listeners
		WriteLine("\t botonSalir.addActionListener(this)");
		WriteLine("\t botonPeliculas.addActionListener(this)");
		WriteLine("\t botonCines.addActionListener(this)");

		//Formato pagina
		WriteLine("\n\t this.setSize(500,300);");
		WriteLine("\t this.setVisible(true);");
		WriteLine("}\n");
	} else {
		WriteLine("public Dialog_"+v.nombre+"() {");
		WriteLine("\t super();");

		foreach(Boton b in v.Boton) {
			if(b.VentanaTarget != null)
				WriteLine("\t ventanav_"+b.VentanaTarget.nombre+" = new Dialog_"+b.VentanaTarget.nombre+"(this,true);");
		}

		WriteLine("\t this.setLayout(new FlowLayout());\n");

		//Creacion menus
		if(v.Menu.Count>0) {
			WriteLine("\t MenuBar MB = new MenuBar();");
			WriteLine("\t this.setMenuBar(MB)");
			foreach(Menu m in v.Menu) {
				WriteLine("\t Menu menu"+m.titulo+" = new Menu(\"m.titulo\");");
				foreach(ItemDeMenu im in m.ItemDeMenu) {
					WriteLine("item"+im.titulo+" = new ItemDeMenu(\"im.titulo\");");
					WriteLine("menu"+m.titulo+".add(item"+im.titulo+");");
				}
				WriteLine("\t MB.add(menu"+m.titulo+");");
			}
		}

		//Instanciacion botones
		foreach(Boton b in v.Boton) {
			if(b is ItemDeMenu) {
				
			} else {
				WriteLine("\t boton"+b.titulo+" = new Button(\""+b.titulo+"\");");
				WriteLine("\t this.add(boton"+b.titulo+");");
				WriteLine("\t boton"+b.titulo+".addActionListener(this);");
			}
		}
		
		WriteLine("\n\t this.setSize(250,150)");
		WriteLine("}\n");
	}

}
#>

<#+
private void generarActionPerformed(Ventana v){
WriteLine("//Aqui va la funcion actionPerformed");
}
#>

<#+ //METODO ATR. VENTANAS
private void atributosVentana(Ventana v){

foreach(Boton bot in v.Boton){//Botones

	//Obtener la ventana a la que lleva el boton
	if(bot.VentanaTarget!=null){
		if(bot.VentanaTarget is VentanaSecundaria){
			WriteLine("private Dialog_"+bot.VentanaTarget.nombre+" ventana_"+bot.VentanaTarget.nombre+";");
			}
	}//ifBot
}//foreachBot

foreach(Menu m in v.Menu){
	foreach(ItemDeMenu it in m.ItemDeMenu){
		if(it.VentanaTarget!=null){
			if(it.VentanaTarget is VentanaSecundaria){
			WriteLine("private Dialog_"+it.VentanaTarget.nombre+" ventana_"+it.VentanaTarget.nombre+";");
			}
		}
	}
}

}
#>




<#+ //METODO CLICKABLES
private void atributosClickable(Ventana v){
foreach(Boton bot in v.Boton)
{
 WriteLine("private Button "+bot.titulo+";");
}
foreach(Menu m in v.Menu){
	foreach(ItemDeMenu it in m.ItemDeMenu){
	WriteLine("private MenuItem "+it.titulo+";");
	}
}
}
#>